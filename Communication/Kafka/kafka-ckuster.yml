name: kafka-cluster

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - smart-weather-network

  broker-1:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - smart-weather-network

  broker-2:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - smart-weather-network

  broker-3:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-3
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:9094
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - smart-weather-network

  mqtt-connector:
    container_name: mqtt-connector
    image: confluentinc/cp-kafka-connect:7.3.0
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - zookeeper
      - hivemq-proxy
    ports:
      - "8083:8083"
    environment:
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_PLUGIN_PATH: /usr/share/confluent-hub/components/
    volumes:
      - ./conf:/config
      - ./conf/connect_distributed.properties:/etc/kafka/connect-distributed.properties
    entrypoint: ["/bin/bash", "/config/mqtt-startup.sh"]
    networks:
      - smart-weather-network

  init-kafka:
    container_name: init-kafka
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker-1:9092 --list
      kafka-topics --bootstrap-server broker-2:9093 --list
      kafka-topics --bootstrap-server broker-3:9094 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker-1:9092 --create --if-not-exists --topic smartweather.measure.data --replication-factor 1 --partitions 9
      kafka-topics --bootstrap-server broker-2:9093 --create --if-not-exists --topic smartweather.measure.data --replication-factor 1 --partitions 9
      kafka-topics --bootstrap-server broker-3:9094 --create --if-not-exists --topic smartweather.measure.data --replication-factor 1 --partitions 9

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker-1:9092 --list
      kafka-topics --bootstrap-server broker-2:9093 --list
      kafka-topics --bootstrap-server broker-3:9094 --list
      "
    networks:
      - smart-weather-network

networks:
  smart-weather-network:
    driver: bridge
